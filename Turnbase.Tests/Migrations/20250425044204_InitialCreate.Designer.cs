// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Turnbase.Server.Data;

#nullable disable

namespace Turnbase.Tests.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20250425044204_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Turnbase.Server.Models.Game", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GameTypeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("GameName");

                    b.HasIndex("GameTypeName");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Turnbase.Server.Models.GameState", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GameId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Signature")
                        .HasColumnType("TEXT");

                    b.Property<string>("StateJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("GameId");

                    b.HasIndex("GameId1");

                    b.ToTable("GameStates");
                });

            modelBuilder.Entity("Turnbase.Server.Models.PlayerMove", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GameStateId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GameStateId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MoveJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Signature")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameStateId");

                    b.HasIndex("GameStateId1");

                    b.ToTable("PlayerMoves");
                });

            modelBuilder.Entity("Turnbase.Server.Models.GameState", b =>
                {
                    b.HasOne("Turnbase.Server.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turnbase.Server.Models.Game", "Game")
                        .WithMany("GameStates")
                        .HasForeignKey("GameId1");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Turnbase.Server.Models.PlayerMove", b =>
                {
                    b.HasOne("Turnbase.Server.Models.GameState", null)
                        .WithMany()
                        .HasForeignKey("GameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turnbase.Server.Models.GameState", "GameState")
                        .WithMany("PlayerMoves")
                        .HasForeignKey("GameStateId1");

                    b.Navigation("GameState");
                });

            modelBuilder.Entity("Turnbase.Server.Models.Game", b =>
                {
                    b.Navigation("GameStates");
                });

            modelBuilder.Entity("Turnbase.Server.Models.GameState", b =>
                {
                    b.Navigation("PlayerMoves");
                });
#pragma warning restore 612, 618
        }
    }
}
